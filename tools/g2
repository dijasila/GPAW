#!/usr/bin/env python
"""
 _  _  _       _    .    _ 2
(_||_)(_|\/\/.(_||_|| = (_|
 _||           _|        _|

"""
 
from optparse import OptionParser, SUPPRESS_HELP


parser = OptionParser(usage='%prog [options] [file[, file2, ...]]',
                      version='%prog 0.1',
                      description='See the online manual ' +
                      '(https://wiki.fysik.dtu.dk/gpaw/G2) ' +
                      'for more information.')
parser.add_option('-n', '--image-number',
                  default=':', metavar='NUMBER',
                  help='Pick image(s) from trajectory.  NUMBER can be a '
                  'single number (use a negative number to count from '
                  'the back) or a range: start:stop:step, where the '
                  '":step" part can be left out - default values are '
                  '0:nimages:1.')
parser.add_option('-u', '--show-unit-cell', type='int',
                  default=1, metavar='I',
                  help="0: Don't show unit cell.  1: Show unit cell.  "
                  '2: Show all of unit cell.')
parser.add_option('-r', '--repeat',
                  default='1',
                  help='Repeat unit cell.  Use "-r 2" or "-r 2,3,1".')
parser.add_option('-R', '--rotations', default='',
                  help='Examples: "-R -90x", "-R 90z,-30x".')
parser.add_option('-o', '--output', metavar='FILE',
                  help='Write configurations to FILE.')
parser.add_option('-g', '--graph',
                  metavar='EXPR',
                  help='Plot x,y1,y2,... graph from configurations or '
                  'data to sdtout in terminal mode.  Use the '
                  'symbols: i, s, d, fmax, e, R, E and F.')
parser.add_option('-t', '--terminal',
                  action='store_true',
                  default=False,
                  help='Run in terminal window - no GUI.')
parser.add_option('--aneb',
                  action='store_true',
                  default=False,
                  help='Read ANEB data.')
parser.add_option('--interpolate',
                  type='int', metavar='N',
                  help='Interpolate N images between 2 given images.')
parser.add_option('--read-pickled-data-from-file',
                  type='string', help=SUPPRESS_HELP)

opt, args = parser.parse_args()

from gpaw.gui.atoms import Atoms
atoms = Atoms()

if opt.aneb:
    opt.image_number = '-1'

if opt.read_pickled_data_from_file is not None:
    import sys
    import pickle
    data = pickle.load(open(opt.read_pickled_data_from_file))
    atoms.pckl(data)
else:    
    if len(args) > 0:
        atoms.read(args, opt.image_number)
    else:
        atoms.reset()

if opt.interpolate:
    atoms.interpolate(opt.interpolate)

if opt.aneb:
    atoms.aneb()

r = opt.repeat.split(',')
if len(r) == 1:
    r = 3 * r
atoms.repeat_atoms([int(c) for c in r])

if opt.output is not None:
    atoms.write(opt.output, rotations=opt.rotations,
                show_unit_cell=opt.show_unit_cell)
    opt.terminal = True

if opt.terminal:
    if opt.graph is not None:
        data = atoms.graph(opt.graph)
        for line in data.T:
            for x in line:
                print x,
            print
else:
    from gpaw.gui.gui import GUI
    gui = GUI(atoms, opt.rotations, opt.show_unit_cell)
    gui.run(opt.graph)
