import os

import csv

import numpy as np

from ase.tasks.main import run
from ase.data.g2_1 import molecule_names
from ase.data.g2_1 import atom_names

# these results are calculated at g2_1 geometries

ref = {'energy': {'NH3': -19.605533402321218, 'S2': -7.0810414617519122, 'SiH2_s3B1d': -8.7759908399368669, 'Li': -0.29319682334332237, 'CH3OH': -30.487618323749885, 'SiH4': -18.882924436300225, 'Si2H6': -30.908512683269542, 'PH3': -15.563140963535854, 'PH2': -10.787249524206141, 'HF': -7.9837877510802402, 'O2': -10.416163883275138, 'SiH3': -13.824476027493471, 'NH': -8.1049721528948417, 'Be': 0.00013449199540180293, 'SH2': -11.163527324593179, 'ClO': -5.9485279049460882, 'H2O2': -18.66896494610657, 'NO': -12.72240899674598, 'ClF': -4.1883250107280379, 'LiH': -3.7215644994701158, 'HCO': -17.387980037758517, 'CH3': -18.159001336243474, 'CH4': -24.050427414518929, 'Cl2': -3.5116423725215689, 'Na': -0.2383609972856453, 'HOCl': -11.151795859064951, 'SiH2_s1A1d': -9.479573015774184, 'SiO': -11.384176129305651, 'F2': -3.7479660146138754, 'P2': -8.9815565437101466, 'Si2': -5.2204639237990245, 'C': -1.3793568771840903, 'CH': -6.1637223239384138, 'CO': -15.116622417915027, 'CN': -13.020178156000842, 'F': -0.71996577768058145, 'H': -1.1166377884849512, 'LiF': -6.9785745676785123, 'O': -2.0871287972452635, 'N': -3.1543252653856753, 'Na2': -1.2379733147665914, 'P': -1.8697938756628569, 'Si': -0.85275653713692912, 'SO2': -17.391482689531021, 'NaCl': -4.6872566462839229, 'Li2': -1.4457350472890471, 'NH2': -13.569252858557235, 'CS': -10.209307240743765, 'C2H6': -40.527870423922998, 'N2': -16.853415239927887, 'C2H4': -32.000568789699912, 'HCN': -19.786937815135527, 'C2H2': -22.965175233886441, 'CH2_s3B1d': -12.031817586098269, 'CH3Cl': -22.396658996594283, 'BeH': -3.513841245766085, 'CO2': -23.60602203675867, 'CH3SH': -27.617118775053058, 'OH': -7.9711420000000004, 'Cl': -0.33349960224027098, 'S': -1.0437181790326588, 'N2H4': -30.443436776539063, 'H2O': -14.48407726217266, 'SO': -9.2568696072518648, 'CH2_s1A1d': -11.367199372650481, 'H2CO': -22.437947573627696, 'HCl': -6.0603128467005636}, 'ea': {'NH3': 13.101294771480688, 'S2': 4.993605103686594, 'SiH2_s3B1d': 5.689958725830035, 'CH3OH': 22.554581495380727, 'SiH4': 13.563616745223491, 'Si2H6': 22.503172878085977, 'PH3': 10.343433722418144, 'PH2': 6.6841800715733815, 'HF': 6.1471841849147077, 'O2': 6.2419062887846106, 'SiH3': 9.6218061249016884, 'NH': 3.8340090990242155, 'SH2': 7.8865335685906182, 'ClO': 3.527899505460554, 'H2O2': 12.261431774646141, 'NO': 7.480954934115041, 'ClF': 3.1348596308071857, 'LiH': 2.3117298876418424, 'HCO': 12.804856574844212, 'CH3': 13.429731093604531, 'CH4': 18.204519383395034, 'Cl2': 2.8446431680410269, 'HOCl': 7.6145296710944654, 'SiH2_s1A1d': 6.3935409016673521, 'SiO': 8.4442907949234574, 'F2': 2.3080344592527124, 'P2': 5.2419687923844327, 'Si2': 3.5149508495251665, 'CH': 3.6677276582693725, 'CO': 11.650136743485673, 'CN': 8.4864960134310756, 'LiF': 5.9654119666546084, 'Na2': 0.76125132019530084, 'SO2': 12.173506916007835, 'NaCl': 4.1153960467580069, 'Li2': 0.85934140060240238, 'NH2': 8.1816520162016566, 'CS': 7.7862321845270159, 'C2H6': 31.069329938645112, 'N2': 10.544764709156537, 'C2H4': 24.775303881391928, 'HCN': 14.13661788408081, 'C2H2': 17.973185902548359, 'CH2_s3B1d': 8.4191851319442765, 'CH3Cl': 17.33388915171507, 'BeH': 2.3973379492765359, 'CO2': 18.052407565084053, 'CH3SH': 20.727492564896504, 'OH': 4.7673754142697859, 'N2H4': 19.66823509182791, 'H2O': 10.163672887957494, 'SO': 6.1260226309739423, 'CH2_s1A1d': 7.7545669184964883, 'H2CO': 16.73818632222844, 'HCl': 4.610175455975341}}

tag = 'pbe_gpaw_nrel'

def main():

    atoms, task = run('gpaw molecule g2_1 -t ' + tag + ' --atomize -s')

    prop2molecules = {'ea': molecule_names, 'energy': molecule_names + atom_names}
    prop2index = {'ea': 'atomic energy', 'energy': 'energy'}
    prop2prec = {'ea': 0.02, 'energy': 0.05}

    calc = {}

    for p in ['energy', 'ea']:
        calc[p] = {}
        for m in prop2molecules[p]:
            try:
                if p == 'energy':
                    calc[p][m] = task.data[m][prop2index[p]]
                else:
                    # atomization energy
                    calc[p][m] = - calc['energy'][m]
                    calc[p][m] += task.data[m][prop2index[p]] # energy of atoms
            except (KeyError, TypeError):
                calc[p][m] = None
                print 'Missing: ' + m + ' for property ' + p
                pass

        skeys = ref[p].keys()
        skeys.sort()
        for k in skeys:
            assert calc[p][k] is not None, 'Missing: ' + k + ' for property ' + p
            diff = calc[p][k] - ref[p][k]
            assert abs(diff) < prop2prec[p], 'Error: ' + k + ' ' + str(diff) + ' for property ' + p

        outfilename = tag + '_%s.csv' % p

        d = []
        for k in prop2molecules[p]:
            d.append([k, calc[p][k]])
        csvwriter = csv.writer(open(outfilename, 'wb'))
        for row in d:
            csvwriter.writerow(row)

if __name__ == '__main__':
    main()
