import os

import csv

import numpy as np

from ase.tasks.main import run
from ase.data.g2_1 import molecule_names
from ase.data.g2_1 import atom_names

# these results are calculated at relaxed geometries

ref = {'distance': {'NH3': 1.0224615364537213, 'S2': 1.9110487002618217, 'SiH2_s3B1d': 1.4989324625922011, 'CH3OH': 1.104201665753074, 'SiH4': 1.4951245769559502, 'Si2H6': 3.1998588305990014, 'PH3': 1.4318580312873828, 'PH2': 1.4366316847417331, 'HF': 0.93477123612479762, 'O2': 1.2188020035832619, 'SiH3': 1.4969599584433113, 'NH': 1.051130244810651, 'SH2': 1.3527115694884646, 'ClO': 1.5819444474660833, 'H2O2': 1.897441323707427, 'NO': 1.1576632214196767, 'ClF': 1.6546075475455799, 'LiH': 1.6108490780081146, 'HCO': 1.1355201732204891, 'CH3': 1.0869242102992744, 'CH4': 1.0966231177864716, 'Cl2': 2.0070458143835674, 'HOCl': 1.7112369784644414, 'SiH2_s1A1d': 1.5392726317955376, 'SiO': 1.5371021619833911, 'F2': 1.4158946042093872, 'P2': 1.9071907339505412, 'Si2': 2.2872936790857583, 'CH': 1.1372990943870702, 'CO': 1.1377999214610588, 'CN': 1.1743340269789853, 'LiF': 1.6059716076047676, 'Na2': 3.086285419407881, 'SO2': 1.4554620908228222, 'NaCl': 2.3806984482876921, 'Li2': 2.7288984398228182, 'NH2': 1.037450716962357, 'CS': 1.5463425029046007, 'C2H6': 2.185346283553586, 'N2': 1.1026167672116696, 'C2H4': 2.1213424111981514, 'HCN': 1.0763265392858292, 'C2H2': 1.0714232933137264, 'CH2_s3B1d': 1.0858315520032749, 'CH3Cl': 1.0944520166573317, 'BeH': 1.358105959955668, 'CO2': 1.1724306771348871, 'CH3SH': 1.0961440689210646, 'OH': 0.9854636123633399, 'N2H4': 1.9959978371978258, 'H2O': 0.97151938626505141, 'SO': 1.503552824055775, 'CH2_s1A1d': 1.1230333194521529, 'H2CO': 2.0366052642262789, 'HCl': 1.2904940760712031}, 'energy': {'NH3': -19.60602540281139, 'S2': -7.0817416450908732, 'SiH2_s3B1d': -8.7809489405725323, 'Li': -0.29325154190015429, 'CH3OH': -30.487972607921119, 'SiH4': -18.887265860883609, 'Si2H6': -30.915304051782989, 'PH3': -15.578584347550201, 'PH2': -10.794162525271865, 'HF': -7.9672691943837215, 'O2': -10.439032918881418, 'SiH3': -13.828817367900497, 'NH': -8.1043000412657733, 'Be': 0.00013754831538673052, 'SH2': -11.169094795706346, 'ClO': -5.9558824381899775, 'H2O2': -18.67206324153754, 'NO': -12.731476978045464, 'ClF': -4.1714625205300182, 'LiH': -3.7238640529465519, 'HCO': -17.389183835485177, 'CH3': -18.159273485280547, 'CH4': -24.050571906785645, 'Cl2': -3.5113964849802706, 'Na': -0.23781174128252805, 'HOCl': -11.150539604050088, 'SiH2_s1A1d': -9.4875406566272122, 'SiO': -11.384373331517393, 'F2': -3.714143724458483, 'P2': -8.9924989278811402, 'Si2': -5.2250504759402903, 'C': -1.3763344725466222, 'CH': -6.1640743965844731, 'CO': -15.122778849903554, 'CN': -13.105155454636238, 'F': -0.70287455940399945, 'H': -1.1168762460292994, 'LiF': -6.9750919819367718, 'O': -2.0850234469830382, 'N': -3.1524161338633228, 'Na2': -1.2391857075131991, 'P': -1.8697007924362057, 'Si': -0.85264612095257586, 'SO2': -17.416092763703158, 'NaCl': -4.6867128408441356, 'Li2': -1.4469671522011729, 'NH2': -13.570153842780117, 'CS': -10.207129289106545, 'C2H6': -40.527583714253687, 'N2': -16.90130631930786, 'C2H4': -31.998965558063254, 'HCN': -19.802205945682566, 'C2H2': -22.96523556361721, 'CH2_s3B1d': -12.036728775804631, 'CH3Cl': -22.39759612738959, 'BeH': -3.5141012364009359, 'CO2': -23.606884505901238, 'CH3SH': -27.619015354416767, 'OH': -7.9711510604291034, 'Cl': -0.33294439057214104, 'S': -1.0431775521572761, 'N2H4': -30.444945878227244, 'H2O': -14.483849858925241, 'SO': -9.2654676432984271, 'CH2_s1A1d': -11.37017968748955, 'H2CO': -22.44450721795366, 'HCl': -6.06142887990005}, 'ea': {'NH3': 13.102980530860169, 'S2': 4.9953865407763214, 'SiH2_s3B1d': 5.694550327561358, 'CH3OH': 22.55910970427426, 'SiH4': 13.567114755813837, 'Si2H6': 22.508754333702043, 'PH3': 10.358254817026097, 'PH2': 6.6907092407770605, 'HF': 6.1475183889504228, 'O2': 6.2689860249153417, 'SiH3': 9.6255425088600219, 'NH': 3.835007661373151, 'SH2': 7.8921647514904718, 'ClO': 3.5379146006347981, 'H2O2': 12.268263855512863, 'NO': 7.4940373971991026, 'ClF': 3.1356435705538779, 'LiH': 2.3137362650170985, 'HCO': 12.810949669926217, 'CH3': 13.432310274646026, 'CH4': 18.206732450121827, 'Cl2': 2.8455077038359886, 'HOCl': 7.6156955204656098, 'SiH2_s1A1d': 6.401142043616038, 'SiO': 8.4467037635817785, 'F2': 2.3083946056504843, 'P2': 5.2530973430087293, 'Si2': 3.5197582340351383, 'CH': 3.6708636780085513, 'CO': 11.661420930373893, 'CN': 8.5764048482262929, 'LiF': 5.978965880632618, 'Na2': 0.76356222494814308, 'SO2': 12.202868317579807, 'NaCl': 4.1159567089894669, 'Li2': 0.86046406840086431, 'NH2': 8.1839852168581952, 'CS': 7.7876172644026465, 'C2H6': 31.073657292984645, 'N2': 10.596474051581215, 'C2H4': 24.778791628852812, 'HCN': 14.156579093243321, 'C2H2': 17.978814126465366, 'CH2_s3B1d': 8.4266418111994099, 'CH3Cl': 17.33768852618293, 'BeH': 2.3973625386870232, 'CO2': 18.06050313938854, 'CH3SH': 20.73199834559567, 'OH': 4.769251367416766, 'N2H4': 19.672608626383401, 'H2O': 10.165073919883604, 'SO': 6.137266644158113, 'CH2_s1A1d': 7.7600927228843286, 'H2CO': 16.7493968063654, 'HCl': 4.6116082432986101}}

tag = 'pbe_gpaw_nrel_opt'

def main():

    atoms, task = run('gpaw molecule g2_1 -t ' + tag + ' --atomize -s')

    prop2molecules = {'ea': molecule_names,
                      'energy': molecule_names + atom_names,
                      'distance': molecule_names}
    prop2index = {'ea': 'atomic energy', 'energy': 'relaxed energy', 'distance': 'distance'}
    prop2prec = {'ea': 0.02, 'energy': 0.05, 'distance': 0.005}

    calc = {}

    for p in ['energy', 'ea', 'distance']:
        calc[p] = {}
        for m in prop2molecules[p]:
            try:
                if p in ['energy', 'distance']:
                    calc[p][m] = task.data[m][prop2index[p]]
                else:
                    # atomization energy
                    calc[p][m] = - calc['energy'][m]
                    calc[p][m] += task.data[m][prop2index[p]] # energy of atoms
            except (KeyError, TypeError):
                calc[p][m] = None
                print 'Missing: ' + m + ' for property ' + p
                pass

        skeys = ref[p].keys()
        skeys.sort()
        for k in skeys:
            assert calc[p][k] is not None, 'Missing: ' + k + ' for property ' + p
            diff = calc[p][k] - ref[p][k]
            assert abs(diff) < prop2prec[p], 'Error: ' + k + ' ' + str(diff) + ' for property ' + p

        outfilename = tag + '_%s.csv' % p

        d = []
        for k in prop2molecules[p]:
            d.append([k, calc[p][k]])
        csvwriter = csv.writer(open(outfilename, 'wb'))
        for row in d:
            csvwriter.writerow(row)

if __name__ == '__main__':
    main()
