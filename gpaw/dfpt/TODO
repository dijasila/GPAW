2010-06-29
 - Provide instance of ``Perturbation`` in ``__call__`` member function of class ``ResponseCalculator`` instead of in constructor.
 - Member function ``integrate/derivative`` of class ``lfc`` does not work with complex quantities when initialized with ``integral`` keyword.
 - How does the ``second_derivative`` member function of class ``LFC`` handle complex wave-functions?
 - Perturbation breaks symmetry -> how should that be accounted for.
 - The integrated density change for q!=0 is different from zero.
 - Include time-reversal symmetry.
 - The contribution to the rhs of the Sternheimer eq. from the perturbation is 
   recalculated in each iteration - NOT necessary, at least not all of it!!!
2010-06-24
 - use XXX for things that needs a closer inspection when time allows.
 - Use of time-reversal symmetry in case of degeneracies (Gonze PRB 1997 in Ref. 82).
 - Implicit downcast of complex numpy arrays to real arrays when assigning entrances of a real array to complex values.
 - Use fast blacs functions.
 - Implement ``Iteration`` class taking care of convergence checks for density, wave-functions and dynamical matrix.
 - Convergenece criteria for SC loop; how does ``integrate`` member function on class ``GridDescriptor`` handle complex quantitites ?
2010-05-25
 * Implement phases for the Transformer object for q != 0.
2010-04-08
 * Generalize Poisson solver to handle complex potentials with Bloch BC's.
   - dirty hack for q=0 in function ``construct_reciprocal``.
 * Generalize mixer to handle complex densities.
 - Generalize ``second_derivative`` method in the LFC class to arbitraty angular momentum.
 - Improve the ``add_derivative`` method of the LFC class.
 - Generalize ``dict`` method of the LFC class to provide dicts for integrals with second derivatives.
 * Does the linear solver handle complex vectors ??
 * Implement q-vectors.
   - not very elegant but works for now.
 - Implement symmetries.
 - Convergence criteria for density (and wave functions).
